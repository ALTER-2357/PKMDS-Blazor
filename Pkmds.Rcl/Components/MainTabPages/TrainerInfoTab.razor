@inherits BasePkmdsComponent

<div class="form-grid">

    @if (AppState.SaveFile is
        {
            Context: not
        (EntityContext.None or
        EntityContext.SplitInvalid or
        EntityContext.MaxInvalid),
            Generation: var saveGeneration
        } saveFile)
    {
        <div class="form-field">
            <MudTextField Label="Name"
                          Variant="@Variant.Outlined"
                          MaxLength="@saveFile.MaxStringLengthTrainer"
                          @bind-Value="@saveFile.OT"
                          For="@(() => saveFile.OT)" />
        </div>

        @switch (saveFile.GetTrainerIDFormat())
        {
            case TrainerIDFormat.SixteenBit:
                {
                    <div class="form-field">
                        <MudNumericField Label="ID"
                                         Variant="@Variant.Outlined"
                                         @bind-Value="@saveFile.TID16"
                                         Format="@AppService.GetIdFormatString()"
                                         For="@(() => saveFile.TID16)" />
                    </div>

                    @if (saveGeneration >= 3)
                    {
                        <div class="form-field">
                            <MudNumericField Label="SID"
                                             Variant="@Variant.Outlined"
                                             @bind-Value="@saveFile.SID16"
                                             Format="@AppService.GetIdFormatString(true)"
                                             For="@(() => saveFile.SID16)" />
                        </div>
                    }
                }
                break;

            case TrainerIDFormat.SixDigit:
                {
                    <div class="form-field">
                        <MudNumericField Label="ID"
                                         Variant="@Variant.Outlined"
                                         @bind-Value="@saveFile.TrainerTID7"
                                         Format="@AppService.GetIdFormatString()"
                                         For="@(() => saveFile.TrainerTID7)" />
                    </div>

                    @if (saveGeneration >= 3)
                    {
                        <div class="form-field">
                            <MudNumericField Label="SID"
                                             Variant="@Variant.Outlined"
                                             @bind-Value="@saveFile.TrainerSID7"
                                             Format="@AppService.GetIdFormatString(true)"
                                             For="@(() => saveFile.TrainerSID7)" />
                        </div>
                    }
                }
                break;
        }

        @if (saveGeneration >= 2)
        {
            <div class="form-field">
                <GenderDisplayComponent Gender="@((Gender)saveFile.Gender)"
                                        OnChange="@OnGenderToggle" />
            </div>
        }

        @if (saveFile is SAV4 sav4Geo)
        {
            <div class="form-field">
                <MudSelect Label="Country"
                           Variant="@Variant.Outlined"
                           @bind-Value="@sav4Geo.Country"
                           @bind-Value:after="@UpdateCountry"
                           For="@(() => sav4Geo.Country)">
                    @foreach (var country in Countries.OrderBy(c => c.Text))
                    {
                        <MudSelectItem Value="@country.Value"
                                       @key="@country.Value">
                            @country.Text
                        </MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="form-field">
                <MudSelect Label="Region"
                           Variant="@Variant.Outlined"
                           @bind-Value="@sav4Geo.Region"
                           For="@(() => sav4Geo.Region)">
                    @foreach (var region in Regions)
                    {
                        <MudSelectItem Value="@region.Value"
                                       @key="@region.Value">
                            @region.Text
                        </MudSelectItem>
                    }
                </MudSelect>
            </div>
        }

        <div class="form-field">
            <MudNumericField Label="Hours"
                             T="@int"
                             Variant="@Variant.Outlined"
                             Min="0"
                             Max="@ushort.MaxValue"
                             @bind-Value="@saveFile.PlayedHours"
                             For="@(() => saveFile.PlayedHours)" />
        </div>

        <div class="form-field">
            <MudNumericField Label="Minutes"
                             T="@int"
                             Variant="@Variant.Outlined"
                             Min="0"
                             Max="59"
                             @bind-Value="@saveFile.PlayedMinutes"
                             For="@(() => saveFile.PlayedMinutes)" />
        </div>

        <div class="form-field">
            <MudNumericField Label="Seconds"
                             T="@int"
                             Variant="@Variant.Outlined"
                             Min="0"
                             Max="59"
                             @bind-Value="@saveFile.PlayedSeconds"
                             For="@(() => saveFile.PlayedSeconds)" />
        </div>

        @if (saveGeneration >= 4)
        {
            <div class="form-field">
                <label for="game-start">
                    Game Start
                </label>
                <InputDate Type="@GameStartType"
                           id="game-start"
                           @bind-Value="@GameStartedDate" />
            </div>

            @if (saveGeneration <= 7)
            {
                <div class="form-field">
                    <label for="hall-of-fame">
                        Hall of Fame
                    </label>
                    <InputDate Type="@InputDateType.DateTimeLocal"
                               id="hall-of-fame"
                               @bind-Value="@HallOfFameDate" />
                </div>
            }

            @if (saveFile is SAV9SV sv9)
            {
                <div class="form-field">
                    <label for="last-saved">
                        Last Saved
                    </label>
                    <InputDate Type="@InputDateType.DateTimeLocal"
                               id="last-saved"
                               @bind-Value="@sv9.LastSaved.Timestamp" />
                </div>
            }
        }

        @if (saveFile is SAV1 sav1Rival)
        {
            <div class="form-field">
                <MudTextField Label="Rival Name"
                              Variant="@Variant.Outlined"
                              MaxLength="@sav1Rival.MaxStringLengthTrainer"
                              @bind-Value="@sav1Rival.Rival"
                              For="@(() => sav1Rival.Rival)" />
            </div>

            <div class="form-field">
                @* ReSharper disable once CSharpWarnings::CS8603 *@
                <MudAutocomplete T="@ComboItem"
                                 Label="Rival Starter"
                                 Variant="@Variant.Outlined"
                                 @bind-Value:get="@GetGen1RivalStarter(sav1Rival)"
                                 @bind-Value:set="@(species => SetGen1RivalStarter(sav1Rival, species))"
                                 SearchFunc="@SearchPokemonNames"
                                 ToStringFunc="@(species => species?.Text)" />
            </div>
        }

        @if (saveFile is SAV2 sav2Rival)
        {
            <div class="form-field">
                <MudTextField Label="Rival Name"
                              Variant="@Variant.Outlined"
                              MaxLength="@sav2Rival.MaxStringLengthTrainer"
                              @bind-Value="@sav2Rival.Rival"
                              For="@(() => sav2Rival.Rival)" />
            </div>
        }

        @if (saveFile is SAV3FRLG sav3FrLgRival)
        {
            <div class="form-field">
                <MudTextField Label="Rival Name"
                              Variant="@Variant.Outlined"
                              MaxLength="@sav3FrLgRival.MaxStringLengthTrainer"
                              @bind-Value="@sav3FrLgRival.RivalName"
                              For="@(() => sav3FrLgRival.RivalName)" />
            </div>
        }

        <div class="form-field">
            <MudNumericField Label="Money"
                             T="@uint"
                             Variant="@Variant.Outlined"
                             Adornment="@Adornment.Start"
                             AdornmentIcon="@Constants.PokeDollarSvg"
                             Min="0"
                             Max="@((uint)saveFile.MaxMoney)"
                             @bind-Value="@saveFile.Money"
                             For="@(() => saveFile.Money)" />
        </div>

        @if (saveGeneration <= 4)
        {
            <div class="form-field">
                <MudNumericField Label="Coins"
                                 T="@uint"
                                 Value="@GetCoins()"
                                 ValueChanged="@SetCoins"
                                 Variant="@Variant.Outlined"
                                 Min="0"
                                 Max="@((uint)saveFile.MaxCoins)" />
            </div>
        }

        if (saveFile is SAV3E sav3)
        {
            <div class="form-field">
                <MudNumericField Label="BP"
                                 T="@uint"
                                 Variant="@Variant.Outlined"
                                 Min="0"
                                 Max="9999"
                                 @bind-Value="@sav3.BP"
                                 For="@(() => sav3.BP)" />
            </div>

            <div class="form-field">
                <MudNumericField Label="Earned BP"
                                 T="@uint"
                                 Variant="@Variant.Outlined"
                                 Min="0"
                                 Max="@uint.MaxValue"
                                 @bind-Value="@sav3.BPEarned"
                                 For="@(() => sav3.BPEarned)" />
            </div>
        }

        @if (saveFile is SAV3FRLG sav3FrLgTrainerCard)
        {
            @for (var i = 0; i < 6; i++)
            {
                var localIndex = i;
                <div class="form-field">
                    @* ReSharper disable once CSharpWarnings::CS8603 *@
                    <MudAutocomplete T="@ComboItem"
                                     Label="@($"Trainer Card {localIndex + 1}")"
                                     Variant="@Variant.Outlined"
                                     @bind-Value:get="@GetTrainerCardPokemon(sav3FrLgTrainerCard, localIndex)"
                                     @bind-Value:set="@((ComboItem species) => { SetTrainerCardPokemon(sav3FrLgTrainerCard, localIndex, species); })"
                                     SearchFunc="@SearchPokemonNames"
                                     ToStringFunc="@(species => species?.Text)" />
                </div>
            }
        }

        @if (saveFile is SAV4 sav4Map)
        {
            <div class="form-field">
                <MudNumericField Label="Current Map"
                                 Variant="@Variant.Outlined"
                                 @bind-Value="@sav4Map.M"
                                 For="@(() => sav4Map.M)" />
            </div>
            <div class="form-field">
                <MudNumericField Label="X"
                                 Variant="@Variant.Outlined"
                                 @bind-Value="@sav4Map.X"
                                 For="@(() => sav4Map.X)" />
            </div>
            <div class="form-field">
                <MudNumericField Label="Z"
                                 Variant="@Variant.Outlined"
                                 @bind-Value="@sav4Map.Z"
                                 For="@(() => sav4Map.Z)" />
            </div>
            <div class="form-field">
                <MudNumericField Label="Y"
                                 Variant="@Variant.Outlined"
                                 @bind-Value="@sav4Map.Y"
                                 For="@(() => sav4Map.Y)" />
            </div>
        }

        @if (saveFile is SAV1 sav1Options)
        {
            <div class="form-field">
                <MudSelect Label="Battle Style"
                           Variant="@Variant.Outlined"
                           @bind-Value="@sav1Options.BattleStyleSwitch"
                           For="@(() => sav1Options.BattleStyleSwitch)">
                    <MudSelectItem Value="@true"
                                   @key="@true">
                        Switch
                    </MudSelectItem>
                    <MudSelectItem Value="@false"
                                   @key="@false">
                        Set
                    </MudSelectItem>
                </MudSelect>
            </div>

            <div class="form-field">
                <MudSelect Label="Text Speed"
                           Variant="@Variant.Outlined"
                           @bind-Value="@sav1Options.TextSpeed"
                           For="@(() => sav1Options.TextSpeed)">
                    <MudSelectItem Value="0"
                                   @key="0">
                        0 (Instant)
                    </MudSelectItem>
                    <MudSelectItem Value="1"
                                   @key="1">
                        1 (Fast)
                    </MudSelectItem>
                    <MudSelectItem Value="2"
                                   @key="2">
                        2
                    </MudSelectItem>
                    <MudSelectItem Value="3"
                                   @key="3">
                        3 (Normal)
                    </MudSelectItem>
                    <MudSelectItem Value="4"
                                   @key="4">
                        4
                    </MudSelectItem>
                    <MudSelectItem Value="5"
                                   @key="5">
                        5 (Slow)
                    </MudSelectItem>
                    <MudSelectItem Value="6"
                                   @key="6">
                        6
                    </MudSelectItem>
                    <MudSelectItem Value="7"
                                   @key="7">
                        7
                    </MudSelectItem>
                </MudSelect>
            </div>

            <div class="form-field">
                <MudCheckBox Label="Use Battle Effects"
                             @bind-Value="@sav1Options.BattleEffects"
                             For="@(() => sav1Options.BattleEffects)" />
            </div>
        }

        @if (saveFile is SAV2 sav2)
        {
            <div class="form-field">
                <MudSelect Label="Battle Style"
                           Variant="@Variant.Outlined"
                           @bind-Value="@sav2.BattleStyleSwitch"
                           For="@(() => sav2.BattleStyleSwitch)">
                    <MudSelectItem Value="@true"
                                   @key="@true">
                        Switch
                    </MudSelectItem>
                    <MudSelectItem Value="@false"
                                   @key="@false">
                        Set
                    </MudSelectItem>
                </MudSelect>
            </div>

            <div class="form-field">
                <MudSelect Label="Text Speed"
                           Variant="@Variant.Outlined"
                           @bind-Value="@sav2.TextSpeed"
                           For="@(() => sav2.TextSpeed)">
                    <MudSelectItem Value="0"
                                   @key="0">
                        0 (Instant)
                    </MudSelectItem>
                    <MudSelectItem Value="1"
                                   @key="1">
                        1 (Fast)
                    </MudSelectItem>
                    <MudSelectItem Value="2"
                                   @key="2">
                        2
                    </MudSelectItem>
                    <MudSelectItem Value="3"
                                   @key="3">
                        3 (Normal)
                    </MudSelectItem>
                    <MudSelectItem Value="4"
                                   @key="4">
                        4
                    </MudSelectItem>
                    <MudSelectItem Value="5"
                                   @key="5">
                        5 (Slow)
                    </MudSelectItem>
                    <MudSelectItem Value="6"
                                   @key="6">
                        6
                    </MudSelectItem>
                    <MudSelectItem Value="7"
                                   @key="7">
                        7
                    </MudSelectItem>
                </MudSelect>
            </div>

            <div class="form-field">
                <MudSelect Label="Sound Type"
                           Variant="@Variant.Outlined"
                           @bind-Value="@sav2.Sound"
                           For="@(() => sav2.Sound)">
                    <MudSelectItem Value="0"
                                   @key="0">
                        Mono
                    </MudSelectItem>
                    <MudSelectItem Value="1"
                                   @key="1">
                        Stereo
                    </MudSelectItem>
                </MudSelect>
            </div>

            <div class="form-field">
                <MudCheckBox Label="Use Battle Effects"
                             @bind-Value="@sav2.BattleEffects"
                             For="@(() => sav2.BattleEffects)" />
            </div>
        }
    }
</div>

<BadgesComponent />
