name: Versioning

on:
  push:
    branches: [ dev ]

jobs:
  version:
    name: Update Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Ensure full commit history

      - name: Generate Date-Based Version
        id: versioning
        run: |
          DATE_VERSION=$(date +'%Y.%m.%d')
          echo "DATE_VERSION=$DATE_VERSION" >> $GITHUB_ENV

          BASE_VERSION="${DATE_VERSION}"
          EXISTING_VERSIONS=$(git tag -l "$BASE_VERSION.*" | sort -V | tail -n 1)

          if [[ -z "$EXISTING_VERSIONS" ]]; then
            COUNTER=1
          else
            LAST_COUNTER=$(echo "$EXISTING_VERSIONS" | awk -F '.' '{print $NF}')
            COUNTER=$((LAST_COUNTER + 1))
          fi

          NEW_VERSION="$BASE_VERSION.$COUNTER"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Generated version: $NEW_VERSION"

      - name: Update version in .csproj
        run: |
          sed -i "s/<Version>.*<\/Version>/<Version>${{ env.NEW_VERSION }}<\/Version>/g" Pkmds.Web/Pkmds.Web.csproj

      - name: Commit version update to dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Pkmds.Web/Pkmds.Web.csproj
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push origin dev
