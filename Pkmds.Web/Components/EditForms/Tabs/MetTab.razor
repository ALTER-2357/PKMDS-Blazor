@inherits BasePkmdsComponent

@if (Pokemon is not null &&
AppState.SaveFile is { Context: { } saveFileEntityContext, Generation: { } saveGeneration } &&
saveFileEntityContext is not
EntityContext.None or
EntityContext.SplitInvalid or
EntityContext.MaxInvalid &&
AppState.SelectedSlotsAreValid)
{
    <MudSelect Label="Origin Game"
               Variant="@Variant.Outlined"
               @bind-Value="@Pokemon.Version"
               ToStringFunc="@(version => GameInfo.GetVersionName(version))"
               Disabled="@(saveGeneration <= 2)"
               For="@(() => Pokemon.Version)">
        @foreach (GameVersion version in Enum.GetValues(typeof(GameVersion)))
        {
            <MudSelectItem Value="@version"
                           @key="@version" />
        }
    </MudSelect>

    <MudAutocomplete T="@ComboItem"
                     Label="Met Location"
                     Variant="@Variant.Outlined"
                     @bind-Value:get="@(AppService.GetMetLocationComboItem(Pokemon.MetLocation))"
                     @bind-Value:set="@(metLocation => Pokemon.MetLocation = (ushort)metLocation.Value)"
                     SearchFunc="@SearchMetLocations"
                     ToStringFunc="@(metLocation => metLocation?.Text)" />

    @if (saveGeneration >= 3)
    {
        <MudSelect Label="Ball"
                   Variant="@Variant.Outlined"
                   @bind-Value="@Pokemon.Ball"
                   For="@(() => Pokemon.Ball)">
            @foreach (ComboItem ball in GameInfo.FilteredSources.Balls.DistinctBy(ball => ball.Value))
            {
                <MudSelectItem Value="@((byte)ball.Value)"
                               @key="@ball.Value">
                    <MudStack Row>
                        <MudImage Src="@SpriteHelper.GetBallSpriteFilename(ball.Value)"
                                  Alt="@ball.Text"
                                  title="@ball.Text"
                                  ObjectFit="@ObjectFit.Contain"
                                  ObjectPosition="@ObjectPosition.Center"
                                  Width="22"
                                  Height="22" />
                        <MudText>
                            @ball.Text
                        </MudText>
                    </MudStack>
                </MudSelectItem>
            }
        </MudSelect>
    }

    @if (saveGeneration >= 2)
    {
        <MudNumericField Label="Met Level"
                         Variant="@Variant.Outlined"
                         @bind-Value="@Pokemon.MetLevel"
                         For="@(() => Pokemon.MetLevel)" />
    }

    @if (saveGeneration == 2 && Pokemon is PK2 pk2)
    {
        <MudSelect Label="Time of Day"
                   T="@MetTimeOfDay"
                   Variant="@Variant.Outlined"
                   Value="@GetMetTimeOfDay"
                   ValueChanged="@SetMetTimeOfDay">
            @foreach (var timeOfDay in Enum.GetValues<MetTimeOfDay>())
            {
                <MudSelectItem Value="@timeOfDay"
                               @key="@timeOfDay">
                    @timeOfDay.ToString()
                </MudSelectItem>
            }
        </MudSelect>
    }
    else if (saveGeneration >= 4)
    {
        <DateOnlyPicker Label="Met Date"
                        @bind-Date="@Pokemon.MetDate"
                        Variant="@Variant.Outlined"
                        Color="@Color.Default" />
    }

    @if (saveGeneration >= 4)
    {
        <MudCheckBox Label="This Pokémon was met as an Egg"
                     T="@bool"
                     Value="@PokemonMetAsEgg"
                     ValueChanged="@MetAsEggChanged"
                     For="@(() => Pokemon.FatefulEncounter)" />
    }

    @if (saveGeneration >= 4 && PokemonMetAsEgg)
    {
        <MudAutocomplete T="@ComboItem"
                         Label="Egg Met Location"
                         Variant="@Variant.Outlined"
                         @bind-Value:get="@(AppService.GetMetLocationComboItem(Pokemon.EggLocation))"
                         @bind-Value:set="@(metLocation => Pokemon.EggLocation = (ushort)metLocation.Value)"
                         DebounceInterval="200"
                         SearchFunc="@SearchEggMetLocations"
                         ToStringFunc="@(metLocation => metLocation?.Text)" />

        <DateOnlyPicker Label="Egg Met Date"
                        @bind-Date="@Pokemon.EggMetDate"
                        Variant="@Variant.Outlined"
                        Color="@Color.Default" />
    }

    <MudCheckBox Label="Is Egg"
                 @bind-Value="@Pokemon.IsEgg"
                 @bind-Value:after="@RefreshService.Refresh"
                 For="@(() => Pokemon.IsEgg)" />

    @if (saveGeneration >= 3)
    {
        <MudCheckBox Label="Fateful Encounter"
                     @bind-Value="@Pokemon.FatefulEncounter"
                     For="@(() => Pokemon.FatefulEncounter)" />
    }
}
