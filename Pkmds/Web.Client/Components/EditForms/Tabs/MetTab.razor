@inherits BasePkmdsComponent

@if (Pokemon is not null
     && AppState.SaveFile is { Context: not EntityContext.None }
     && (AppState.SelectedBoxNumber is not null
         && AppState.SelectedBoxSlotNumber is not null
         || AppState.SelectedPartySlotNumber is not null))
{
    <MudCheckBox Label="Nicknamed"
                 @bind-Value="@Pokemon.IsNicknamed"
                 @bind-Value:after="@RefreshService.Refresh"
                 For="@(() => Pokemon.IsNicknamed)"/>

    <MudSelect Label="Origin Game"
               Variant="@Variant.Outlined"
               @bind-Value="@Pokemon.Version"
               ToStringFunc="@(version => GameInfo.GetVersionName(version))"
               For="@(() => Pokemon.Version)">
        @foreach (GameVersion version in Enum.GetValues(typeof(GameVersion)))
        {
            <MudSelectItem Value="@version"/>
        }
    </MudSelect>

    <MudSelect Label="Ball"
               Variant="@Variant.Outlined"
               @bind-Value="@Pokemon.Ball"
               For="@(() => Pokemon.Ball)">
        @foreach (var ball in GameInfo.BallDataSource)
        {
            <MudSelectItem Value="@((byte)ball.Value)">
                <MudStack Row>
                    <MudImage Src="@SpriteHelper.GetBallSpriteFilename(ball.Value)"
                              ObjectFit="@ObjectFit.Contain"
                              ObjectPosition="@ObjectPosition.Center"
                              Width="22"
                              Height="22"/>
                    <MudText>
                        @ball.Text
                    </MudText>
                </MudStack>
            </MudSelectItem>
        }
    </MudSelect>

    <MudCheckBox Label="Fateful Encounter"
                 @bind-Value="@Pokemon.FatefulEncounter"
                 For="@(() => Pokemon.FatefulEncounter)"/>

    <MudAutocomplete T="@ComboItem"
                     Label="Met Location"
                     Variant="@Variant.Outlined"
                     @bind-Value:get="@(AppService.GetMetLocationComboItem(Pokemon.MetLocation))"
                     @bind-Value:set="@(metLocation => Pokemon.MetLocation = (ushort)metLocation.Value)"
                     SearchFunc="@(searchString => Task.FromResult(AppService.SearchMetLocations(searchString)))"
                     @* ReSharper disable once ConditionalAccessQualifierIsNonNullableAccordingToAPIContract *@
                     ToStringFunc="@(metLocation => metLocation?.Text ?? string.Empty)"/>

    <DateOnlyPicker @bind-Date="@Pokemon.MetDate"
                    Label="Met Date"/>

    @*
        <MudCheckBox Label="Met as Egg"
        @bind-Value="@Pokemon.WasEgg"
        @bind-Value:after="@RefreshService.Refresh"
        For="@(() => Pokemon.WasEgg)" />
    *@
    <MudAutocomplete T="@ComboItem"
                     Label="Egg Location"
                     Variant="@Variant.Outlined"
                     @bind-Value:get="@(AppService.GetMetLocationComboItem(Pokemon.EggLocation))"
                     @bind-Value:set="@(metLocation => Pokemon.EggLocation = (ushort)metLocation.Value)"
                     SearchFunc="@(searchString => Task.FromResult(AppService.SearchMetLocations(searchString)))"
                     @* ReSharper disable once ConditionalAccessQualifierIsNonNullableAccordingToAPIContract *@
                     ToStringFunc="@(metLocation => metLocation?.Text ?? string.Empty)"/>

    <DateOnlyPicker @bind-Date="@Pokemon.EggMetDate"
                    Label="Met Date"/>
}